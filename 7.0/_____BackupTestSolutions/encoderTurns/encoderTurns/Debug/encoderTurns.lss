
encoderTurns.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000030a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000296  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000030a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000030a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000033c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  0000037c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017fe  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000817  00000000  00000000  00001cca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ead  00000000  00000000  000024e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b4  00000000  00000000  00003390  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009c9  00000000  00000000  00003744  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c8d  00000000  00000000  0000410d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000338  00000000  00000000  00004d9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__vector_3>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_5>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 40 01 	call	0x280	; 0x280 <main>
  88:	0c 94 49 01 	jmp	0x292	; 0x292 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <_Z22RegisterInitializationv>:
	//rightMotorForward(50);
	//leftMotorRearward(50);
	//timerInMilliseconds(20);
	//rightMotorForward(0);
	//leftMotorRearward(0);
  90:	87 b1       	in	r24, 0x07	; 7
  92:	88 61       	ori	r24, 0x18	; 24
  94:	87 b9       	out	0x07, r24	; 7
  96:	83 e6       	ldi	r24, 0x63	; 99
  98:	8a b9       	out	0x0a, r24	; 10
  9a:	87 b1       	in	r24, 0x07	; 7
  9c:	87 7d       	andi	r24, 0xD7	; 215
  9e:	87 b9       	out	0x07, r24	; 7
  a0:	84 b1       	in	r24, 0x04	; 4
  a2:	86 60       	ori	r24, 0x06	; 6
  a4:	84 b9       	out	0x04, r24	; 4
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	25 b9       	out	0x05, r18	; 5
  aa:	30 e8       	ldi	r19, 0x80	; 128
  ac:	3b b9       	out	0x0b, r19	; 11
  ae:	83 ea       	ldi	r24, 0xA3	; 163
  b0:	84 bd       	out	0x24, r24	; 36
  b2:	95 e0       	ldi	r25, 0x05	; 5
  b4:	95 bd       	out	0x25, r25	; 37
  b6:	81 ea       	ldi	r24, 0xA1	; 161
  b8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  bc:	8d e0       	ldi	r24, 0x0D	; 13
  be:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  c2:	e1 eb       	ldi	r30, 0xB1	; 177
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	87 60       	ori	r24, 0x07	; 7
  ca:	80 83       	st	Z, r24
  cc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
  d0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  d4:	87 e6       	ldi	r24, 0x67	; 103
  d6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  da:	86 e0       	ldi	r24, 0x06	; 6
  dc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  e0:	84 e8       	ldi	r24, 0x84	; 132
  e2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  e6:	87 e0       	ldi	r24, 0x07	; 7
  e8:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
  ec:	30 93 6d 00 	sts	0x006D, r19	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
  f0:	20 93 6b 00 	sts	0x006B, r18	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
  f4:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
  f8:	78 94       	sei
  fa:	08 95       	ret

000000fc <__vector_3>:
  fc:	1f 92       	push	r1
  fe:	0f 92       	push	r0
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	0f 92       	push	r0
 104:	11 24       	eor	r1, r1
 106:	8f 93       	push	r24
 108:	9f 93       	push	r25
 10a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 10e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 112:	01 96       	adiw	r24, 0x01	; 1
 114:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 118:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 11c:	9f 91       	pop	r25
 11e:	8f 91       	pop	r24
 120:	0f 90       	pop	r0
 122:	0f be       	out	0x3f, r0	; 63
 124:	0f 90       	pop	r0
 126:	1f 90       	pop	r1
 128:	18 95       	reti

0000012a <__vector_5>:
 12a:	1f 92       	push	r1
 12c:	0f 92       	push	r0
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	8f 93       	push	r24
 136:	9f 93       	push	r25
 138:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 13c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 140:	01 96       	adiw	r24, 0x01	; 1
 142:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 146:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 14a:	9f 91       	pop	r25
 14c:	8f 91       	pop	r24
 14e:	0f 90       	pop	r0
 150:	0f be       	out	0x3f, r0	; 63
 152:	0f 90       	pop	r0
 154:	1f 90       	pop	r1
 156:	18 95       	reti

00000158 <_Z19timerInMillisecondsj>:
 158:	0f 93       	push	r16
 15a:	1f 93       	push	r17
 15c:	8c 01       	movw	r16, r24
 15e:	00 0f       	add	r16, r16
 160:	11 1f       	adc	r17, r17
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	08 0f       	add	r16, r24
 170:	19 1f       	adc	r17, r25
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	40 e0       	ldi	r20, 0x00	; 0
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	ba 01       	movw	r22, r20
 17c:	e2 eb       	ldi	r30, 0xB2	; 178
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	81 3a       	cpi	r24, 0xA1	; 161
 184:	30 f4       	brcc	.+12     	; 0x192 <_Z19timerInMillisecondsj+0x3a>
 186:	80 81       	ld	r24, Z
 188:	8f 5f       	subi	r24, 0xFF	; 255
 18a:	80 83       	st	Z, r24
 18c:	80 81       	ld	r24, Z
 18e:	81 3a       	cpi	r24, 0xA1	; 161
 190:	d0 f3       	brcs	.-12     	; 0x186 <_Z19timerInMillisecondsj+0x2e>
 192:	10 82       	st	Z, r1
 194:	4f 5f       	subi	r20, 0xFF	; 255
 196:	5f 4f       	sbci	r21, 0xFF	; 255
 198:	6f 4f       	sbci	r22, 0xFF	; 255
 19a:	7f 4f       	sbci	r23, 0xFF	; 255
 19c:	04 17       	cp	r16, r20
 19e:	15 07       	cpc	r17, r21
 1a0:	26 07       	cpc	r18, r22
 1a2:	37 07       	cpc	r19, r23
 1a4:	68 f7       	brcc	.-38     	; 0x180 <_Z19timerInMillisecondsj+0x28>
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	1f 91       	pop	r17
 1ac:	0f 91       	pop	r16
 1ae:	08 95       	ret

000001b0 <_Z16rightEncoderTurnv>:
 1b0:	ef 92       	push	r14
 1b2:	ff 92       	push	r15
 1b4:	0f 93       	push	r16
 1b6:	1f 93       	push	r17
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	ca e0       	ldi	r28, 0x0A	; 10
 1be:	d0 e0       	ldi	r29, 0x00	; 0
 1c0:	0f 2e       	mov	r0, r31
 1c2:	f8 e8       	ldi	r31, 0x88	; 136
 1c4:	ef 2e       	mov	r14, r31
 1c6:	f1 2c       	mov	r15, r1
 1c8:	f0 2d       	mov	r31, r0
 1ca:	0a e8       	ldi	r16, 0x8A	; 138
 1cc:	10 e0       	ldi	r17, 0x00	; 0
 1ce:	f7 01       	movw	r30, r14
 1d0:	11 82       	std	Z+1, r1	; 0x01
 1d2:	10 82       	st	Z, r1
 1d4:	c7 bd       	out	0x27, r28	; 39
 1d6:	f8 01       	movw	r30, r16
 1d8:	d1 83       	std	Z+1, r29	; 0x01
 1da:	c0 83       	st	Z, r28
 1dc:	18 bc       	out	0x28, r1	; 40
 1de:	84 e1       	ldi	r24, 0x14	; 20
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 ac 00 	call	0x158	; 0x158 <_Z19timerInMillisecondsj>
 1e6:	2a 96       	adiw	r28, 0x0a	; 10
 1e8:	c2 33       	cpi	r28, 0x32	; 50
 1ea:	d1 05       	cpc	r29, r1
 1ec:	81 f7       	brne	.-32     	; 0x1ce <_Z16rightEncoderTurnv+0x1e>
 1ee:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 1f2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 1f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1fa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 1fe:	89 36       	cpi	r24, 0x69	; 105
 200:	91 05       	cpc	r25, r1
 202:	78 f5       	brcc	.+94     	; 0x262 <_Z16rightEncoderTurnv+0xb2>
 204:	a8 e8       	ldi	r26, 0x88	; 136
 206:	b0 e0       	ldi	r27, 0x00	; 0
 208:	42 e3       	ldi	r20, 0x32	; 50
 20a:	ea e8       	ldi	r30, 0x8A	; 138
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	22 e3       	ldi	r18, 0x32	; 50
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	11 96       	adiw	r26, 0x01	; 1
 214:	1c 92       	st	X, r1
 216:	1e 92       	st	-X, r1
 218:	47 bd       	out	0x27, r20	; 39
 21a:	31 83       	std	Z+1, r19	; 0x01
 21c:	20 83       	st	Z, r18
 21e:	18 bc       	out	0x28, r1	; 40
 220:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 224:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 228:	89 36       	cpi	r24, 0x69	; 105
 22a:	91 05       	cpc	r25, r1
 22c:	90 f3       	brcs	.-28     	; 0x212 <_Z16rightEncoderTurnv+0x62>
 22e:	19 c0       	rjmp	.+50     	; 0x262 <_Z16rightEncoderTurnv+0xb2>
 230:	f7 01       	movw	r30, r14
 232:	11 82       	std	Z+1, r1	; 0x01
 234:	10 82       	st	Z, r1
 236:	c7 bd       	out	0x27, r28	; 39
 238:	f8 01       	movw	r30, r16
 23a:	d1 83       	std	Z+1, r29	; 0x01
 23c:	c0 83       	st	Z, r28
 23e:	18 bc       	out	0x28, r1	; 40
 240:	84 e1       	ldi	r24, 0x14	; 20
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 ac 00 	call	0x158	; 0x158 <_Z19timerInMillisecondsj>
 248:	2a 97       	sbiw	r28, 0x0a	; 10
 24a:	91 f7       	brne	.-28     	; 0x230 <_Z16rightEncoderTurnv+0x80>
 24c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 250:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 254:	17 bc       	out	0x27, r1	; 39
 256:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 25a:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 25e:	18 bc       	out	0x28, r1	; 40
 260:	08 c0       	rjmp	.+16     	; 0x272 <_Z16rightEncoderTurnv+0xc2>
 262:	0f 2e       	mov	r0, r31
 264:	f8 e8       	ldi	r31, 0x88	; 136
 266:	ef 2e       	mov	r14, r31
 268:	f1 2c       	mov	r15, r1
 26a:	f0 2d       	mov	r31, r0
 26c:	0a e8       	ldi	r16, 0x8A	; 138
 26e:	10 e0       	ldi	r17, 0x00	; 0
 270:	df cf       	rjmp	.-66     	; 0x230 <_Z16rightEncoderTurnv+0x80>
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	1f 91       	pop	r17
 278:	0f 91       	pop	r16
 27a:	ff 90       	pop	r15
 27c:	ef 90       	pop	r14
 27e:	08 95       	ret

00000280 <main>:

int main(void)
{
	// Output for an LED
	//DDRD = (1<<PORTD0);
	RegisterInitialization();
 280:	0e 94 48 00 	call	0x90	; 0x90 <_Z22RegisterInitializationv>
    /* Replace with your application code */
    while (1) 
    { 
	timerInMilliseconds(2000);
 284:	80 ed       	ldi	r24, 0xD0	; 208
 286:	97 e0       	ldi	r25, 0x07	; 7
 288:	0e 94 ac 00 	call	0x158	; 0x158 <_Z19timerInMillisecondsj>
	rightEncoderTurn();
 28c:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_Z16rightEncoderTurnv>
 290:	f9 cf       	rjmp	.-14     	; 0x284 <main+0x4>

00000292 <_exit>:
 292:	f8 94       	cli

00000294 <__stop_program>:
 294:	ff cf       	rjmp	.-2      	; 0x294 <__stop_program>
